/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	kubeeyev1alpha2 "github.com/kubesphere/kubeeye/apis/kubeeye/v1alpha2"
)

// ServiceConnectRuleApplyConfiguration represents a declarative configuration of the ServiceConnectRule type for use
// with apply.
type ServiceConnectRuleApplyConfiguration struct {
	RuleItemBasesApplyConfiguration `json:",inline"`
	Namespace                       *string `json:"namespace,omitempty"`
	Workspace                       *string `json:"workspace,omitempty"`
}

// ServiceConnectRuleApplyConfiguration constructs a declarative configuration of the ServiceConnectRule type for use with
// apply.
func ServiceConnectRule() *ServiceConnectRuleApplyConfiguration {
	return &ServiceConnectRuleApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithName(value string) *ServiceConnectRuleApplyConfiguration {
	b.RuleItemBasesApplyConfiguration.Name = &value
	return b
}

// WithRule sets the Rule field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Rule field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithRule(value string) *ServiceConnectRuleApplyConfiguration {
	b.RuleItemBasesApplyConfiguration.Rule = &value
	return b
}

// WithDesc sets the Desc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Desc field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithDesc(value string) *ServiceConnectRuleApplyConfiguration {
	b.RuleItemBasesApplyConfiguration.Desc = &value
	return b
}

// WithLevel sets the Level field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Level field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithLevel(value kubeeyev1alpha2.Level) *ServiceConnectRuleApplyConfiguration {
	b.RuleItemBasesApplyConfiguration.Level = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithNamespace(value string) *ServiceConnectRuleApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithWorkspace sets the Workspace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Workspace field is set to the value of the last call.
func (b *ServiceConnectRuleApplyConfiguration) WithWorkspace(value string) *ServiceConnectRuleApplyConfiguration {
	b.Workspace = &value
	return b
}
