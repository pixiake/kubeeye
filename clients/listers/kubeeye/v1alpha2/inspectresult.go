/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	kubeeyev1alpha2 "github.com/kubesphere/kubeeye/apis/kubeeye/v1alpha2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// InspectResultLister helps list InspectResults.
// All objects returned here must be treated as read-only.
type InspectResultLister interface {
	// List lists all InspectResults in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubeeyev1alpha2.InspectResult, err error)
	// Get retrieves the InspectResult from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kubeeyev1alpha2.InspectResult, error)
	InspectResultListerExpansion
}

// inspectResultLister implements the InspectResultLister interface.
type inspectResultLister struct {
	listers.ResourceIndexer[*kubeeyev1alpha2.InspectResult]
}

// NewInspectResultLister returns a new InspectResultLister.
func NewInspectResultLister(indexer cache.Indexer) InspectResultLister {
	return &inspectResultLister{listers.New[*kubeeyev1alpha2.InspectResult](indexer, kubeeyev1alpha2.Resource("inspectresult"))}
}
